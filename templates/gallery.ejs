<%- layout('base') %> 

<%- block('styles') %>
<link rel="stylesheet" href="css/gallery.css" />
<link rel="stylesheet" href="css/navbar.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">

<!-- Search Bar & Category Filters -->
<div id="searchFilterContainer">
  <div class="input-group search-bar">
    <input type="text" id="fontSearch" placeholder="Search fonts..." />
    <button class="btn btn" id="searchBtn">
      <i class="bi bi-search"></i>
    </button>
  </div>

  <div class="filter-buttons">
    <button class="filter-btn active" data-category="">All</button>
    <button class="filter-btn" data-category="serif">Serif</button>
    <button class="filter-btn" data-category="sans-serif">Sans-serif</button>
    <button class="filter-btn" data-category="display">Display</button>
    <button class="filter-btn" data-category="handwriting">Handwriting</button>
    <button class="filter-btn" data-category="monospace">Monospace</button>
  </div>
</div>

<div class="gallery-grid" id="fontGallery"></div>
<!-- <div class="pagination">
  <span class="logo">
    F
    <span class="o">o<span class="num">1</span></span>
    <span class="o">o<span class="num">2</span></span>
    <span class="o">o<span class="num">3</span></span>
    <span class="o">o<span class="num">4</span></span>
    <span class="o">o<span class="num">5</span></span>
    <span class="o">o<span class="num">6</span></span>
    <span class="o">o<span class="num">7</span></span>
    <span class="o">o<span class="num">8</span></span>
    <span class="o">o<span class="num">9</span></span>
    <span class="o">o<span class="num">10</span></span>
    ntVerse
  </span>
  <a class="next" href="#">Next â€º</a>
</div> -->



<%- block('scripts') %>
<script>
document.addEventListener("DOMContentLoaded", async function () {
  const gallery = document.getElementById("fontGallery");
  const apiKey = "AIzaSyAXoavmfcp9-DwIUY1jsmn7thegcy9-_80"; // replace with your key
  
  let fontsToUse = [];
  let currentCategory = "";
  let searchQuery = "";

  const searchInput = document.getElementById("fontSearch");
  const searchBtn = document.getElementById("searchBtn");
  const filterBtns = document.querySelectorAll(".filter-btn");


  async function fetchGoogleFonts() {
    try {
      const response = await fetch(`https://www.googleapis.com/webfonts/v1/webfonts?key=${apiKey}`);
      const data = await response.json();

      // Shuffle top fonts 
      fontsToUse = data.items.sort(() => Math.random() - 0.5);

      applyFilters();
    } catch (error) {
      console.error("Error fetching fonts:", error);
      gallery.innerHTML = '<div class="error">Failed to load fonts. Please try again later.</div>';
    }
  }

  function renderFonts(fonts) {
    gallery.innerHTML = "";
    if (fonts.length==0) {
      gallery.innerHTML = '<div class="error">No fonts found.</div>';
      return;
    }

    // Dynamically add Google Fonts link
    const link = document.createElement("link");
    link.href = `https://fonts.googleapis.com/css2?${fonts.map(f => `family=${encodeURIComponent(f.family)}`).join("&")}&display=swap`;
    link.rel = "stylesheet";
    document.head.appendChild(link);


    fonts.forEach(font => {
      const card = document.createElement("div");
      card.className = "font-pair-card";
      card.innerHTML = `
        <div class="pair-header" style="font-family: '${font.family}', ${font.category}">${font.family}</div>
        <div class="pair-subheader" style="font-family: '${font.family}', ${font.category}">The quick brown fox jumps over the lazy dog</div>
        <div class="pair-body" style="font-family: '${font.family}', ${font.category}">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</div>
        <div class="pair-footer">
          <div class="font-name">${font.family} <span class="font-category">${font.category}</span></div>
        </div>
      `;
      gallery.appendChild(card);
    });
  }


  searchInput.addEventListener("input", () => {
    searchQuery = searchInput.value.toLowerCase().trim();
    applyFilters();
  });
  searchBtn.addEventListener("click", () => {
    searchQuery = searchInput.value.toLowerCase().trim();
    applyFilters();
  });


  filterBtns.forEach(btn => {
    btn.addEventListener("click", () => {
      const category = btn.dataset.category.replace(/\s+/g, " ").trim();
      currentCategory = category === "" ? "" : category;
      
      filterBtns.forEach(b => b.classList.remove("active"));
      btn.classList.add("active");

      applyFilters();
    });
  });

  // Apply both filters (search + category)
  function applyFilters() {
    let results = fontsToUse;

    if (currentCategory) {
      results = results.filter(font => font.category.toLowerCase() === currentCategory.toLowerCase());
    }

    if (searchQuery) {
      results = results.filter(font => font.family.toLowerCase().includes(searchQuery));
    }

    renderFonts(results.slice(0, 50)); // limit to first 30 for performance
  }

  fetchGoogleFonts();
});
</script>
